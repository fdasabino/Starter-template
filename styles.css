/* Reset some default styles */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
}

p {
  text-align: center;
  margin-top: 20px;
  font-size: 25px;
}

input {
  padding: 10px;
  margin: 10px;
}

input::placeholder {
  color: white;
  font-size: 15px;
}

h3 {
  text-align: center;
  margin: 20px 0;
  font-size: 25px;
}

/* -> pseudo-elements */
.pseudo_elements {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin: 40px 0;
}

/* * The ::before and ::after pseudo-elements in CSS allows you to insert content onto a page without it needing to be in the HTML. While the end result is not actually in the DOM, it appears on the page as if it is, and would essentially be like this */

/* * The only reasons to use one over the other are: You want the generated content to come before the element content, positionally. The ::after content is also “after” in source-order, so it will position on top of ::before if stacked on top of each other naturally. */

p::before {
  content: "Quote of the day: ";
  color: red;
  margin-right: 10px;
}
p::after {
  content: " - Unknown";
  color: red;
  margin-right: 10px;
}

/* -> Pseudo classes */
.pseudo_class {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin: 40px 0;
}

.pseudo_class ul {
  list-style-type: none;
}

.pseudo_class ul li {
  padding: 10px;
  margin: 10px;
}

.pseudo_class ul li:nth-child(odd) {
  background-color: blue;
}

.pseudo_class ul li:nth-child(even) {
  background-color: red;
}

/* -> attributes selectors */
.attribute_selector {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-top: 20px;
}

.attribute_selector input[type="text"] {
  background-color: #482ff7;
}
.attribute_selector input[type="email"] {
  background-color: red;
}
.attribute_selector input[type="number"] {
  background-color: green;
}
.attribute_selector input[type="date"] {
  background-color: yellow;
}
.attribute_selector input[type="password"] {
  background-color: orange;
}
